{"version":3,"sources":["../src/main.js"],"names":["bus","Vue","siteUrl","siteProtocol","location","protocol","realSiteUrl","host","store","state","offset","totalPages","getOffset","this","setOffset","newValue","getTotalPage","setTotalPage","component","data","message","showButton","posts","showPosts","isLastPage","props","template","methods","randomUnsplash","id","Math","floor","image","post","_embedded","media_details","sizes","thumbnail","source_url","getPosts","_this","$http","get","numberOfPosts","then","response","postsArray","concat","headers","map","console","log","loadMore","currentOffset","created","$on","mounted","vm","el"],"mappings":"YAEA,IAAIA,KAAM,GAAIC,KAEVC,QACAC,aAAeC,SAASC,SACxBC,YAAcF,SAASG,IAGvBL,SADgB,mBAAhBI,YACUH,aAAe,mBAEfA,aAAe,KAAOG,WAGpC,IAAIE,QACAN,QAASA,QACTO,OACIC,OAAQ,EACRC,WAAY,GAEhBC,UANQ,QAAAA,KAOJ,MAAOC,MAAKJ,MAAMC,QAEtBI,UATQ,QAAAA,GASEC,GACNF,KAAKJ,MAAMC,OAASK,GAExBC,aAZQ,QAAAA,KAaJ,MAAOH,MAAKJ,MAAME,YAEtBM,aAfQ,QAAAA,GAeKF,GACTF,KAAKJ,MAAME,WAAaI,GAIhCd,KAAIiB,UAAU,gBACVC,KAAM,QAAAA,KACF,OACIC,QAAS,YACTC,YAAY,EACZC,SACAC,WAAW,EACXC,YAAY,IAGpBC,OAAQ,iBACRC,SAAU,sBACVC,SACIC,eAAgB,QAAAA,GAASC,GAGrB,MADI,qCADUC,KAAKC,MAAMF,EAAK,IAIlCG,MAAO,QAAAA,GAASC,GACZ,MAAIA,GAAKC,UAAU,oBACRD,EAAKC,UAAU,oBAAoB,GAAGC,cAAcC,MAAMC,UAAUC,WAEpEzB,KAAKe,eAAeK,EAAKJ,KAGxCU,SAAU,QAAAA,KAAW,GAAAC,GAAA3B,KACbH,EAASF,MAAMI,WACnBC,MAAK4B,MAAMC,IAAOlC,MAAMN,QAAxB,+CAA8EW,KAAK8B,cAAnF,WAA2GjC,GAAUkC,KAAK,SAAAC,GACtH,GAAIC,GAAaD,EAAS1B,IAE1BqB,GAAKlB,MAAQkB,EAAKlB,MAAMyB,OAAOD,GAE/BN,EAAKpB,QAAU,YAEfoB,EAAKjB,WAAY,CAEjB,IAAIZ,GAAakC,EAASG,QAAQC,IAAI,mBAAmB,EACvCnB,MAAKC,MAAMrB,EAAS,IAAM,GACzBC,IAGf6B,EAAKhB,YAAa,IAEvB,SAAAqB,GACCK,QAAQC,IAAIN,MAGpBO,SAAU,QAAAA,KACNvC,KAAKO,QAAU,YACf,IAAIiC,GAAgB7C,MAAMI,WAE1BJ,OAAMM,UAAUuC,EAAgB,IAEhCxC,KAAK0B,aAGbe,QAAS,QAAAA,KACLtD,IAAIuD,IAAI,WAAY1C,KAAKuC,WAE7BI,QAAS,QAAAA,KACL3C,KAAK0B,aAIb,IAAIkB,IAAK,GAAIxD,MACTyD,GAAI,OACJvC,KAAMX,MAAMC","file":"main.min.js","sourcesContent":["/* global document */\n\nvar bus = new Vue();\n\nvar siteUrl;\nvar siteProtocol = location.protocol;\nvar realSiteUrl = location.host;\n\nif (realSiteUrl === 'localhost:3000') {\n    siteUrl = siteProtocol + '//alexwp2017.dev';\n} else {\n    siteUrl = siteProtocol + '//' + realSiteUrl;\n}\n\nvar store = {\n    siteUrl: siteUrl,\n    state: {\n        offset: 0,\n        totalPages: 0\n    },\n    getOffset() {\n        return this.state.offset;\n    },\n    setOffset(newValue) {\n        this.state.offset = newValue;\n    },\n    getTotalPage() {\n        return this.state.totalPages;\n    },\n    setTotalPage(newValue) {\n        this.state.totalPages = newValue;\n    }\n}\n\nVue.component('post-listing', {\n    data: function(){\n        return {\n            message: 'Load More',\n            showButton: true,\n            posts: [],\n            showPosts: false,\n            isLastPage: false\n        }\n    },\n    props: ['numberOfPosts'],\n    template: '#post-list-template',\n    methods: {\n        randomUnsplash: function(id) {\n            var imageId = Math.floor(id / 5); // just because unsplash doesn't have 10k images and posts could have a > 10k ID\n            var imageUrl = `https://unsplash.it/700/700?image=${imageId}`;\n            return imageUrl;\n        },\n        image: function(post) {\n            if (post._embedded['wp:featuredmedia']) {\n                return post._embedded['wp:featuredmedia'][0].media_details.sizes.thumbnail.source_url;\n            } else {\n                return this.randomUnsplash(post.id);\n            }\n        },\n        getPosts: function() {\n            var offset = store.getOffset();\n            this.$http.get(`${store.siteUrl}/wp-json/wp/v2/posts?_embed&page=1&per_page=${this.numberOfPosts}&offset=${offset}`).then(response => {\n                var postsArray = response.data;\n                // this will append the posts to the posts array\n                this.posts = this.posts.concat(postsArray);\n                // setting the button message\n                this.message = 'Load More';\n                // making sure the posts are displayed - they are false by default\n                this.showPosts = true;\n                // getting needed info to know if we are on the last page when infinite loading\n                var totalPages = response.headers.map['x-wp-totalpages'][0];\n                var currentPage = Math.floor(offset / 10) + 1;\n                if (currentPage == totalPages) {\n                    // if it is the last page, set this variable to true,\n                    // it will hide the loadmore button\n                    this.isLastPage = true;\n                }\n            }, response => {\n                console.log(response);\n            });\n        },\n        loadMore: function() {\n            this.message = 'Loading...';\n            var currentOffset = store.getOffset();\n            // setting the offset\n            store.setOffset(currentOffset + 10);\n            // getting posts (they will be appended)\n            this.getPosts();\n        }\n    },\n    created: function(){\n        bus.$on('loadMore', this.loadMore);\n    },\n    mounted: function() {\n        this.getPosts();\n    }\n});\n\nvar vm = new Vue({\n    el: '#app',\n    data: store.state\n})\n"]}